/*
 * Grid v1.0.0 - ./grid-ext.css
 * 
 * Copyright (C) 2016 Guilherme de Andrade Arantes.
 * 
 * This program is free software: copying and distribution of this file,
 * with or without modification, are permitted in any medium without royalty
 * provided the copyright notice and this notice are preserved.
 * 
 * This work is licensed under the Creative Commons BY SA 4.0 License
 * 
 * Visit [license](http://creativecommons.org/licenses/by-sa/4.0/) or send a letter
 * to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA to view
 * a copy of this licence.
 * 
 * This program is distributed in the hope that it will be useful, but
 * without any warranty; without even the implied warranty of
 * merchantability or fitness for a particular purpose.
 * 
 * Home page: [home](http://guiideandrade.com/proejct/grid)
 * Git-hub page: [git](https://github.com/guiideandrade/grid.git)
 *
 */

/*
 * You should consider uncommenting this code:
 * See: [this](http://www.paulirish.com/2012/box-sizing-border-box-ftw/)
 *
 * html {
 *   -webkit-box-sizing: border-box;
 *      -moz-box-sizing: border-box;
 *           box-sizing: border-box;
 * }
 * *, *:before, *:after {
 *   -webkit-box-sizing: inherit;
 *      -moz-box-sizing: inherit;
 *           box-sizing: inherit;
 * }
 * .widget, .extern {
 *   -webkit-box-sizing: content-box;
 *      -moz-box-sizing: content-box;
 *           box-sizing: content-box;
 * }
 *
 */

/*
 * You should consider uncommenting this code, as we use `rem`
 * See: [this](http://www.w3schools.com/cssref/css_units.asp)
 *
 * html {
 *   font-size: 100%;
 * }
 *
 */

/*
 * (1) I choose to use a wrapper `.row`
 *     this class should be used, in order to float all cols
 *
 * (2) The goal here is to make all cols 100% in small devices
 *     (2.1) :before and :after pseudo-classes are used here
 *           to reset some code and avoid compatibility issues
 *
 */

.row,             /* (1) */
.col,             /* (2) */
.row .col:before, /* (2.1) */
.row .col:after {
  margin: 0;
  padding: 0;
  width: 100%;
  display: block;
  vertical-align: top;
  word-spacing: normal;
  letter-spacing: normal;
}

/*
 * (1) Actually, I'm going to test it without `.float`
 *
 */

.row .col {
  display: inline-block; /* (1) */
}

/*
 * It's `.clearfix`
 * See: [this](http://cssmojo.com/the-very-latest-clearfix-reloaded/)
 *
 */

.row.float:after {
  content: "";
  clear: both;
  display: block;
}

/*
 * You may float to the right, if you choose that way
 *
 */

.row.float .col {
  float: left;
}

/*
 * This is default in all viewports
 * It was made for fixed layouts, until you chance in a larger viewport
 *
 */

.col1-1,
.col2-2,
.col3-3,
.col4-4,
.col5-5{width:100%}
.col1-2,
.col2-4{width:50%}
.col1-3{width:33.333%}
.col2-3{width:66.666%}
.col1-4{width:25%}
.col3-4{width:75%}
.col1-5{width:20%}
.col2-5{width:40%}
.col3-5{width:60%}
.col4-5{width:80%}

/*
 * Classes for small devices
 * It was made for viewports equal or greater than 35.5rem
 * We may say 35.5rem = 568px [if 1rem = 16px]
 *
 */

@media screen and (min-width: 35.5rem) {

  .colsm1-1,
  .colsm2-2{width:100%}
  .colsm1-2{width:50%}

}

/*
 * Classes for medium devices
 * It was made for viewports equal or greater than 48rem
 * We may say 48rem = 768px [if 1rem = 16px]
 *
 */

@media screen and (min-width: 48rem) {

  .colmd1-1,
  .colmd2-2,
  .colmd3-3,
  .colmd4-4{width:100%}
  .colmd1-2,
  .colmd2-4{width:50%}
  .colmd1-3{width:33.333%}
  .colmd2-3{width:66.666%}
  .colmd1-4{width:25%}
  .colmd3-4{width:75%}

}

/*
 * Classes for medium devices
 * It was made for viewports equal or greater than 64rem
 * We may say 64rem = 1024px [if 1rem = 16px]
 *
 */

@media screen and (min-width: 64rem) {

  .collg1-1,
  .collg2-2,
  .collg3-3,
  .collg4-4,
  .collg5-5,
  .collg6-6{width:100%}
  .collg1-2,
  .collg2-4,
  .collg3-6{width:50%}
  .collg1-3,
  .collg2-6{width:33.333%}
  .collg2-3,
  .collg4-6{width:66.666%}
  .collg1-4{width:25%}
  .collg3-4{width:75%}
  .collg1-5{width:20%}
  .collg2-5{width:40%}
  .collg3-5{width:60%}
  .collg4-5{width:80%}
  .collg1-6{width:16.666%}
  .collg5-6{width:83.333%}

}

/*
 * Classes for medium devices
 * It was made for viewports equal or greater than 80rem
 * We may say 80rem = 1280px [if 1rem = 16px]
 *
 */

@media screen and (min-width: 80rem) {

  .colxl1-1,
  .colxl2-2,
  .colxl3-3,
  .colxl4-4,
  .colxl5-5,
  .colxl6-6,
  .colxl7-7,
  .colxl8-8{width:100%}
  .colxl1-2,
  .colxl2-4,
  .colxl3-6,
  .colxl4-8{width:50%}
  .colxl1-3,
  .colxl2-6{width:33.333%}
  .colxl2-3,
  .colxl4-6{width:66.666%}
  .colxl1-4,
  .colxl2-8{width:25%}
  .colxl3-4,
  .colxl6-8{width:75%}
  .colxl1-5{width:20%}
  .colxl2-5{width:40%}
  .colxl3-5{width:60%}
  .colxl4-5{width:80%}
  .colxl1-6{width:16.666%}
  .colxl5-6{width:83.333%}
  .colxl1-7{width:14.285%}
  .colxl2-7{width:28.571%}
  .colxl3-7{width:42.857%}
  .colxl4-7{width:57.142%}
  .colxl5-7{width:71.428%}
  .colxl6-7{width:85.714%}
  .colxl1-8{width:12.5%}
  .colxl3-8{width:37.5%}
  .colxl5-8{width:62.5%}
  .colxl7-8{width:87.5%}

}
